version: "3.9"

services:
  kafka-init:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - kafka-0
    volumes:
      - ./create-topics.sh:/create-topics.sh
    command: >
      bash -c "/create-topics.sh"
    networks:
      - sharednet

  kafka-0:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092" # Internal port
      - "9093:9093" # External port
    environment:
      - KAFKA_BROKER_ID=0
      - KAFKA_LISTENERS=INTERNAL://:9092,EXTERNAL://:9093,CONTROLLER://:9094
      - KAFKA_ADVERTISED_LISTENERS=INTERNAL://kafka-0:9092,EXTERNAL://localhost:9093
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      - KAFKA_INTER_BROKER_LISTENER_NAME=INTERNAL
      - KAFKA_CONTROLLER_LISTENER_NAMES=CONTROLLER
      - KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR=1
      - KAFKA_TRANSACTION_STATE_LOG_MIN_ISR=1
      - KAFKA_CONTROLLER_QUORUM_VOTERS=0@kafka-0:9094
      - KAFKA_PROCESS_ROLES=broker,controller
      - KAFKA_NODE_ID=0
      - KAFKA_STORAGE_CLASS=kafka.storage.RocksDBMetadataStorage
      - CLUSTER_ID=abcdefghijklmnopqrstuv
    volumes:
      - kafka_0_data:/var/lib/kafka/data
    networks:
      - sharednet
  
  ui:
    image: provectuslabs/kafka-ui:v0.7.0
    ports:
      - "8080:8080"
    environment:
      - KAFKA_CLUSTERS_0_BOOTSTRAP_SERVERS=kafka-0:9092
      - KAFKA_CLUSTERS_0_NAME=kraft
    networks:
      - sharednet

  test:
    build:
      context: .
    depends_on:
      kafka-0:
        condition: service_started
      kafka-init:
        condition: service_completed_successfully
    environment:
      - LOCAL=false
    volumes:
      - ./main.py:/main.py
    networks:
      - sharednet

volumes:
  kafka_0_data:

networks:
  sharednet:
    driver: bridge